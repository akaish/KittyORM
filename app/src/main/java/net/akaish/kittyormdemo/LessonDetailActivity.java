/* * --- * *  Copyright (c) 2018 Denis Bogomolov (akaish) * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *    http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * This file is a part of KittyORM project (KittyORM Demo), more information at * https://akaish.github.io/KittyORMPages/license/ * * --- */package net.akaish.kittyormdemo;import android.content.Intent;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.v4.app.Fragment;import android.support.v7.widget.Toolbar;import android.view.View;import android.support.v7.app.ActionBar;import android.view.MenuItem;import android.view.ViewGroup;import android.widget.LinearLayout;import net.akaish.kittyormdemo.fabmenu.FabActivityI;import net.akaish.kittyormdemo.fabmenu.FabAnimationOpenListener;import net.akaish.kittyormdemo.fabmenu.HostFabOnclickListener;import net.akaish.kittyormdemo.lessons.FabContainer;import net.akaish.kittyormdemo.lessons.LessonFabBaseFragment;import net.akaish.kittyormdemo.lessons.LessonHostFragment;import net.akaish.kittyormdemo.lessons.RegularLessonBaseFragment;import net.akaish.kittyormdemo.menu.MainMenu;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Iterator;import java.util.LinkedList;import static net.akaish.kittyormdemo.fabmenu.FabMenuConstants.FAB_MENU_ANIMATION_DIMENSIONS_STEPS;import static net.akaish.kittyormdemo.menu.MainMenu.LESSON_ID;/** * An activity representing a single Lesson detail screen. This * activity is only used on narrow width devices. On tablet-size devices, * item details are presented side-by-side with a list of items * in a {@link LessonListActivity}. * @author akaish (Denis Bogomolov) */public class LessonDetailActivity extends KittyTutorialActivity {    Fragment currentFragment;    private String traceName;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        SimpleDateFormat date =                new SimpleDateFormat("dd_MM_yyyy_hh_mm_ss");        String logDate = date.format(new Date());        //traceName = "LessonDetailActivity_"+logDate;        // Applies the date and time to the name of the trace log.        //Debug.startMethodTracing(traceName);        setContentView(R.layout.activity_lesson_detail);        setFabCoordinatorParentView();        Toolbar toolbar = (Toolbar) findViewById(R.id.detail_toolbar);        setSupportActionBar(toolbar);        // Show the Up button in the action bar.        ActionBar actionBar = getSupportActionBar();        if (actionBar != null) {            actionBar.setDisplayHomeAsUpEnabled(true);        }        // savedInstanceState is non-null when there is fragment state        // saved from previous configurations of this activity        // (e.g. when rotating the screen from portrait to landscape).        // In this case, the fragment will automatically be re-added        // to its container so we don't need to manually add it.        // For more information, see the Fragments API guide at:        //        // http://developer.android.com/guide/components/fragments.html        //        if (savedInstanceState == null) {            // Create the detail fragment and add it to the activity            // using a fragment transaction.            Bundle arguments = new Bundle();            arguments.putInt(LESSON_ID,                    getIntent().getIntExtra(LESSON_ID, 0));            currentFragment = MainMenu.LESSON_ITEMS.get(getIntent().getIntExtra(LESSON_ID, 0)).newLessonFragment();            setTitle(MainMenu.LESSON_ITEMS.get(getIntent().getIntExtra(LESSON_ID, 0)).title);            currentFragment.setArguments(arguments);            getSupportFragmentManager().beginTransaction()                    .add(R.id.lesson_detail_container, currentFragment)                    .commit();        }    }    @Override    protected void setFabCoordinatorParentView() {        fabCoordinatorParentView = findViewById(R.id.lesson_detail_fab_parent);    }    @Override    public void onDestroy() {        super.onDestroy();        //Debug.stopMethodTracing();    }    public void onStart() {        super.onStart();    }    public void onBackPressed() {        if(isFabOpen() && !initialFragmentLoadedByActivity) {            if(currentFragment != null) {                RegularLessonBaseFragment tabFragment = ((LessonHostFragment)currentFragment).getCurrentTabFragment();                if(tabFragment!=null)                    dismissSnackbarIfOpen();                tabFragment.dismissSnackbarIfOpen();            }            closeFabMenu();        } else if (isFabOpen() && initialFragmentLoadedByActivity) {            dismissSnackbarIfOpen();            closeFabMenu();        } else {            super.onBackPressed();        }    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == android.R.id.home) {            // This ID represents the Home or Up button. In the case of this            // activity, the Up button is shown. For            // more details, see the Navigation pattern on Android Design:            //            // http://developer.android.com/design/patterns/navigation.html#up-vs-back            //            navigateUpTo(new Intent(this, LessonListActivity.class));            return true;        }        return super.onOptionsItemSelected(item);    }}